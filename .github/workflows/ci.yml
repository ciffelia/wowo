name: CI

on: [push, pull_request]

jobs:
  frontend-lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: yarn
          cache-dependency-path: ./frontend/yarn.lock

      - run: yarn install --immutable
        working-directory: ./frontend

      - run: yarn run lint
        working-directory: ./frontend

  frontend-build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: yarn
          cache-dependency-path: ./frontend/yarn.lock

      - run: yarn install --immutable
        working-directory: ./frontend

      - run: yarn run build
        working-directory: ./frontend

      - uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: ./frontend/dist

  go-lint:
    needs: frontend-build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          check-latest: true
          cache: true

      - uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: ./frontend/dist

      - run: go vet

  go-build:
    needs: frontend-build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          check-latest: true
          cache: true

      - uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: ./frontend/dist

      - run: go build

      - uses: actions/upload-artifact@v3
        with:
          name: go-build
          path: ./wowo

  release:
    if: github.ref == 'refs/heads/master'
    needs: [frontend-lint, frontend-build, go-lint, go-build]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          check-latest: true
          cache: true

      - uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: ./frontend/dist

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a git tag required by GoRelease
        run: git tag v0.0.0

      - uses: goreleaser/goreleaser-action@v2
        with:
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
